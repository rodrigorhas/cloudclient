using System;
using System.Diagnostics;
using System.IO;
using System.Threading;
namespace lolCycle
{
class Program
{
static void Main(string[] args)
{
string x = "C:\\Riot Games\\League of Legends\\lol.launcher.exe";
if (args.Length > 0)
x = args[0];
lolcycle cycle = new lolcycle(x);
cycle.go();
}
}
class lolcycle
{
private string exePath = "";
public lolcycle(string exePath)
{
this.exePath = exePath;
lastCycle = DateTime.Now.Subtract(cycleInterval).Subtract(new TimeSpan(0, 0, 1));
}
private DateTime lastCycle = DateTime.Now;
private TimeSpan cycleInterval = new TimeSpan(0, 5, 0);
private bool run = true;
public void go()
{
while (run)
{
Thread.Sleep(1000);
if (lastCycle.Add(cycleInterval).CompareTo(DateTime.Now) < 0)
{
Process[] processlist = Process.GetProcesses();
foreach (Process theprocess in processlist)
{
if (theprocess.ProcessName == "lol.launcher")
{
theprocess.CloseMainWindow();
log("closed PID: " + theprocess.Id.ToString());
}
}
if (!working)
lastCycle = DateTime.Now;
new Thread(new ThreadStart(spawnProc)).Start();
}
}
}
private bool working = false;
private void spawnProc()
{
if (working) return;
if (!File.Exists(exePath))
{
log("exe file does not exist: " + exePath);
return;
}
working = true;
Thread.Sleep(1000);
Process p = new Process();
p.StartInfo = new ProcessStartInfo(exePath);
p.Start();
log("started: " + exePath);
while (!p.HasExited)
{
Thread.Sleep(100);
}
working = false;
}
private void log(string what)
{
Console.WriteLine(what);
}
}
}